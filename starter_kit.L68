00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 25/02/2019 17:43:12

00000000                             1  *-------------------------------------------------------
00000000                             2  * Author         : Michael Rainsford Ryan
00000000                             3  * Student Number : C00239510
00000000                             4  * Date Created   : 21/01/2019
00000000                             5  * Description    : A simplified, offline clone of the
00000000                             6  *                : online game "Avalon".
00000000                             7  * Issues/Bugs    : None currenty.
00000000                             8  *-------------------------------------------------------
00000000                             9  
00001000                            10      org $1000
00001000                            11  
00001000                            12  *-------------------------------------------------------
00001000                            13  *Choose to be a Worker or a God 
00001000                            14  *https://www.avalon-rpg.com/
00001000                            15  *-------------------------------------------------------
00001000                            16  
00001000                            17  *-------------------------------------------------------
00001000                            18  *Validation values to be used, modify as needed
00001000                            19  *Add additional validation values as required
00001000                            20  *-------------------------------------------------------
00001000  =00000000                 21  exit        EQU 0      used to exit assembly program
00001000  =00000064                 22  min_feed    EQU 100    min feed requirement
00001000  =00000001                 23  min_potions EQU 1      min number of potions
00001000  =00000009                 24  max_potions EQU 9      max number of potions
00001000  =00000006                 25  min_weapons EQU 6      min weapons
00001000  =00000005                 26  win_point   EQU 5      points accumilated on win
00001000  =00000008                 27  lose_point  EQU 8      points deducted on a loss
00001000                            28  
00001000  =00000064                 29  mine_loc    EQU 100    example for a hit
00001000                            30  
00001000                            31  
00001000                            32  *Start of Game
00001000                            33  start:
00001000  11FC 0064 4000            34      move.b  #100,$4000 put score/health in memory location $4000
00001006  47F8 4000                 35      lea     $4000,A3   assign address A3 to that memory location
0000100A                            36      
0000100A  11FC 0000 4010            37      move.b  #0,$4010   put game state number in memory location $4010
00001010  49F8 4010                 38      lea     $4010,A4   assign address A4 to that memory location
00001014                            39      *1 = Pick role/intro | 5 = Move around | 6 = Combat | 10 to 20 = Shop | 20 = End game
00001014                            40  
00001014  11FC 0000 4020            41      move.b  #0,$4020   put class number in memory location $4020
0000101A  4BF8 4020                 42      lea     $4020,A5   assign address A5 to that memory location
0000101E                            43      * 1 corresponds to knight - 2 corresponds to mage - 3 corresponds to rogue
0000101E                            44      
0000101E                            45      *A6 is used for player coordinates
0000101E                            46      
0000101E  6100 227E                 47      bsr     setup_world
00001022                            48  
00001022  6100 1FE6                 49      bsr     welcome    branch to the welcome subroutine
00001026  6100 1FD8                 50      bsr     game       branch to the game subroutine
0000102A                            51  *Game loop
00003000                            52      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            53  
00003000                            54  *-------------------------------------------------------
00003000                            55  *-------------------Game Subroutine---------------------
00003000                            56  *-------------------------------------------------------
00003000                            57  game:
00003000  6100 0110                 58      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      59      rts                return from game: subroutine
00003006                            60            
00003006                            61  end:
00003006  FFFF FFFF                 62      simhalt
0000300A                            63  
0000300A                            64  *-------------------------------------------------------
0000300A                            65  *-------------------Welcome Subroutine------------------
0000300A                            66  *-------------------------------------------------------
0000300A                            67  welcome:
0000300A  6100 027C                 68      bsr     endl            branch to endl subroutine
0000300E  43F9 0000345F             69      lea     welcome_msg,A1  assign message to address register A1
00003014  103C 000E                 70      move.b  #14,D0          move literal 14 to DO
00003018  4E4F                      71      trap    #15             trap and interpret value in D0
0000301A  6100 026C                 72      bsr     endl            branch to endl subroutine
0000301E  4E75                      73      rts                     return from welcome: subroutine
00003020                            74  
00003020                            75  *-------------------------------------------------------
00003020                            76  *-------------------Role Picking Subroutine------------------
00003020                            77  *-------------------------------------------------------
00003020                            78  pick_role:
00003020                            79  
00003020  43F9 00003644             80      lea     wake_up_msg,A1  assign message to address register A1
00003026  103C 000E                 81      move.b  #14,D0          move literal 14 to DO
0000302A  4E4F                      82      trap    #15             trap and interpret value in D0
0000302C  6100 025A                 83      bsr     endl            branch to endl subroutine
00003030                            84      
00003030  43F9 000036CD             85      lea     pick_role_msg,A1 assign message to address register A1
00003036  103C 000E                 86      move.b  #14,D0           move literal 14 to DO
0000303A  4E4F                      87      trap    #15              trap and interpret value in D0
0000303C                            88      
0000303C  1A3C 0003                 89      move.b  #3,D5           Move the number 3 to D5 to tell the program how many options there are
00003040                            90      
00003040  6100 0008                 91      bsr     input           branch to the input subroutine
00003044                            92      
00003044  6100 03F6                 93      bsr     press_continue          Pause the game until a key is pressed
00003048                            94      
00003048  4E75                      95      rts                     return from pick_role subroutine
0000304A                            96      
0000304A                            97  *-------------------------------------------------------
0000304A                            98  *---------Gameplay Input Values Subroutine--------------
0000304A                            99  *-------------------------------------------------------    
0000304A                           100  input:
0000304A  6100 023C                101      bsr     endl            Branch to end line subroutine
0000304E                           102      
0000304E  43F9 0000382C            103      lea     input_nums_msg,A1 assign message to address register A1
00003054  103C 000E                104      move.b  #14,D0          move literal 14 to DO
00003058  4E4F                     105      trap    #15             Display the "enter number" message
0000305A                           106      
0000305A  2205                     107      move.l  D5,D1           Move the number of options to D1 to display it
0000305C  103C 0003                108      move.b  #3,D0           move literal 3 to DO
00003060  4E4F                     109      trap    #15             Display the number in D1 to show the input range
00003062                           110      
00003062  43F9 00003845            111      lea     colon_msg,A1    assign message to address register A1
00003068  103C 000E                112      move.b  #14,D0          move literal 14 to DO
0000306C  4E4F                     113      trap    #15             Display a colon after the number range
0000306E                           114      
0000306E  103C 0004                115      move.b  #4,D0           Move the number 4 to D0
00003072  4E4F                     116      trap    #15             Take input
00003074                           117      
00003074                           118  manage_input:
00003074  B27C 0001                119      CMP     #1,D1           Check input against minimum value
00003078  6D00 001E                120      BLT     invalid_input   Error if less than 1
0000307C                           121      
0000307C  B245                     122      CMP     D5,D1           Compare input against max value
0000307E  6E00 0018                123      BGT     invalid_input   Error if less than max value
00003082                           124      
00003082  0C14 0000                125      CMP.B   #0,(A4)         Check which state the game is in
00003086  6700 001E                126      BEQ     role_input      Branch to the manage input for the role picking
0000308A  0C14 0005                127      CMP.B   #5,(A4)         Check which state the game is in
0000308E  6700 0244                128      BEQ     wall_collisions Branch to the manage input for the movement
00003092  6600 0070                129      BNE     fake_gamestate  branch to display a message if the gamestate is undifined
00003096                           130      
00003096  4E75                     131      rts                     Return out of subroutine
00003098                           132  
00003098                           133  invalid_input:
00003098  43F9 00003848            134      lea     input_error_msg,A1 assign message to address register A1
0000309E  103C 000E                135      move.b  #14,D0          move literal 14 to DO
000030A2  4E4F                     136      trap    #15             Display the error message
000030A4                           137      
000030A4  60A4                     138      bra     input           Go back to taking input
000030A6                           139      
000030A6                           140  role_input:
000030A6  1A81                     141      move.b  D1,(A5)         Move the role number to A5 to hold the class number
000030A8                           142      
000030A8                           143      *Give the player a message depending on the role chosen
000030A8  B23C 0001                144      CMP.B   #1,D1
000030AC  6700 0014                145      BEQ     knight_select   Branch to knight message if role selected
000030B0                           146      
000030B0  B23C 0002                147      CMP.B   #2,D1
000030B4  6700 0022                148      BEQ     mage_select     Branch to mage message if role selected
000030B8                           149      
000030B8  B23C 0003                150      CMP.B   #3,D1
000030BC  6700 0030                151      BEQ     rogue_select    Branch to rogue message if role selected
000030C0                           152      
000030C0  4E75                     153      rts
000030C2                           154      
000030C2                           155  knight_select:
000030C2  43F9 00003888            156      lea     knight_role_msg,A1 assign message to address register A1
000030C8  103C 000E                157      move.b  #14,D0          move literal 14 to DO
000030CC  4E4F                     158      trap    #15             Display the knight message
000030CE                           159      
000030CE  18BC 0005                160      move.b  #5,(A4)         Change the game state to the movement state
000030D2  4DF8 514A                161      lea     $514A,A6        Set the player coordinate to the first corridor
000030D6                           162      
000030D6  4E75                     163      rts                     Return from the sub routine
000030D8                           164  
000030D8                           165  mage_select:
000030D8  43F9 0000391F            166      lea     mage_role_msg,A1 assign message to address register A1
000030DE  103C 000E                167      move.b  #14,D0          move literal 14 to DO
000030E2  4E4F                     168      trap    #15             Display the mage message
000030E4                           169      
000030E4  18BC 0005                170      move.b  #5,(A4)         Change the game state to the movement state
000030E8  4DF8 514A                171      lea     $514A,A6         Set the player coordinate to the first corridor
000030EC                           172      
000030EC  4E75                     173      rts                     Return from the sub routine
000030EE                           174  
000030EE                           175  rogue_select:
000030EE  43F9 000039B4            176      lea     rogue_role_msg,A1 assign message to address register A1
000030F4  103C 000E                177      move.b  #14,D0          move literal 14 to DO
000030F8  4E4F                     178      trap    #15             Display the rogue message
000030FA                           179      
000030FA  18BC 0005                180      move.b  #5,(A4)         Change the game state to the movement state
000030FE  4DF8 514A                181      lea     $514A,A6         Set the player coordinate to the first corridor
00003102                           182      
00003102  4E75                     183      rts                     Return from the sub routine
00003104                           184  
00003104                           185  fake_gamestate:
00003104  43F9 0000386F            186      lea     fake_gamestate_msg,A1     assign message to address register A1
0000310A  103C 000E                187      move.b  #14,D0          move literal 14 to DO
0000310E  4E4F                     188      trap    #15             Display the error message
00003110  4E75                     189      rts
00003112                           190  
00003112                           191  *-------------------------------------------------------
00003112                           192  *----------------Gameloop (main loop)-------------------
00003112                           193  *------------------------------------------------------- 
00003112                           194  gameloop:
00003112  6100 002A                195      bsr     update          branch to update game subroutine 
00003116  6100 013E                196      bsr     clear_screen    clears the screen         
0000311A  6100 003C                197      bsr     draw            branch to draw screen subroutine
0000311E  6100 0136                198      bsr     clear_screen    clears the screen
00003122  6100 009C                199      bsr     gameplay        branch to gameplay subroutine
00003126  60EA                     200      bra     gameloop
00003128  6100 012C                201      bsr     clear_screen    clears the screen
0000312C  6100 00AC                202      bsr     hud             branch to display HUD subroutine
00003130  6100 0124                203      bsr     clear_screen    clears the screen
00003134  6100 012C                204      bsr     replay          branch to replay game subroutine
00003138  6100 011C                205      bsr     clear_screen    clears the screen
0000313C  4E75                     206      rts                     return from gameloop: subroutine
0000313E                           207  
0000313E                           208  *-------------------------------------------------------
0000313E                           209  *----------------Update Quest Progress------------------
0000313E                           210  *  Complete Quest
0000313E                           211  *------------------------------------------------------- 
0000313E                           212  update:
0000313E  6100 0148                213      bsr     endl            print a CR and LF
00003142  6100 00F4                214      bsr     decorate        decorate with dots using a loop
00003146  43F9 000035D8            215      lea     update_msg,A1   
0000314C  103C 000E                216      move.b  #14,D0
00003150  4E4F                     217      trap    #15
00003152  6100 00E4                218      bsr     decorate
00003156  4E75                     219      rts
00003158                           220  *-------------------------------------------------------
00003158                           221  *-----------------Draw Quest Updates--------------------
00003158                           222  * Draw the game progress information, status regarding
00003158                           223  * quest
00003158                           224  *------------------------------------------------------- 
00003158                           225  draw:
00003158  6100 012E                226      bsr     endl
0000315C  6100 00DA                227      bsr     decorate
00003160  43F9 000035EA            228      lea     draw_msg,A1
00003166  103C 000E                229      move.b  #14,D0
0000316A  4E4F                     230      trap    #15
0000316C  6100 00CA                231      bsr     decorate
00003170  4E75                     232      rts
00003172                           233  *-------------------------------------------------------
00003172                           234  *------------------------Potions------------------------
00003172                           235  * Input the ingredients for each potion. Ingredients costs 
00003172                           236  * money. For an advanced mark you need to manage this 
00003172                           237  * resource
00003172                           238  *------------------------------------------------------- 
00003172                           239  feed:
00003172  6100 0114                240      bsr     endl
00003176  6100 00C0                241      bsr     decorate
0000317A  43F9 000034F6            242      lea     potion_msg,A1
00003180  103C 000E                243      move.b  #14,D0
00003184  4E4F                     244      trap    #15
00003186  6100 00B0                245      bsr     decorate
0000318A  4E75                     246      rts
0000318C                           247  
0000318C                           248  *-------------------------------------------------------
0000318C                           249  *--------------------Potions Inventory---------------------
0000318C                           250  * Number of potions to be used in a Quest 
0000318C                           251  *------------------------------------------------------- 
0000318C                           252  potions:
0000318C  6100 00FA                253      bsr     endl
00003190  6100 00A6                254      bsr     decorate
00003194  43F9 00003542            255      lea     potions_msg,A1
0000319A  103C 000E                256      move.b  #14,D0
0000319E  4E4F                     257      trap    #15
000031A0  6100 0096                258      bsr     decorate
000031A4  4E75                     259      rts
000031A6                           260  
000031A6                           261  *-------------------------------------------------------
000031A6                           262  *-------------------------Weapons-----------------------
000031A6                           263  * Number of weapons
000031A6                           264  *-------------------------------------------------------   
000031A6                           265  weapons:
000031A6  6100 00E0                266      bsr     endl
000031AA  6100 008C                267      bsr     decorate
000031AE  43F9 00003557            268      lea     weapons_msg,A1
000031B4  103C 000E                269      move.b  #14,D0
000031B8  4E4F                     270      trap    #15
000031BA  6100 007C                271      bsr     decorate
000031BE  4E75                     272      rts
000031C0                           273  
000031C0                           274  *-------------------------------------------------------
000031C0                           275  *---Game Play (Quest Progress)--------------------------
000031C0                           276  *------------------------------------------------------- 
000031C0                           277  gameplay:
000031C0  6100 00C6                278      bsr     endl
000031C4  0C14 0000                279      CMP.B   #0,(A4)    Check which stage the game is in
000031C8  6700 FE56                280      BEQ     pick_role  branch to the pick role subroutine
000031CC  0C14 0005                281      CMP.B   #5,(A4)    Check which stage the game is in
000031D0  6700 00EC                282      BEQ     movement  branch to the movement subroutine
000031D4  6100 0026                283      bsr     collision
000031D8  4E75                     284      rts
000031DA                           285  
000031DA                           286  *-------------------------------------------------------
000031DA                           287  *-----------------Heads Up Display (Score)--------------
000031DA                           288  * Retrieves the score from memory location
000031DA                           289  *-------------------------------------------------------   
000031DA                           290  hud:
000031DA                           291  
000031DA  6100 00AC                292      bsr     endl
000031DE  6100 0058                293      bsr     decorate
000031E2  43F9 00003636            294      lea     hud_msg,A1
000031E8  103C 000E                295      move.b  #14,D0
000031EC  4E4F                     296      trap    #15
000031EE  1213                     297      move.b  (A3),D1     retrieve the value A3 point to and move to D1
000031F0  103C 0003                298      move.b  #3,D0       move literal 3 to D0
000031F4  4E4F                     299      trap    #15         intrepret value in D0, which 3 which displays D1
000031F6  6100 0040                300      bsr     decorate
000031FA  4E75                     301      rts
000031FC                           302  
000031FC                           303  *-------------------------------------------------------
000031FC                           304  *-----------------------Being Attacked------------------
000031FC                           305  * This could be used for collision detection
000031FC                           306  *-------------------------------------------------------
000031FC                           307  collision:
000031FC  123C 0064                308      move.b  #mine_loc,D1
00003200  B27C 0064                309      cmp     #100,D1 is( x == 100)?
00003204  6600 0010                310      bne     collision_miss if x is equal to 100, then hit
00003208                           311  collision_hit:
00003208                           312      *hit
00003208  43F9 000035F8            313      lea     hit_msg,A1
0000320E  303C 000E                314      move    #14,D0
00003212  4E4F                     315      trap    #15
00003214  4E75                     316      rts
00003216                           317      
00003216                           318  collision_miss:
00003216                           319      *miss
00003216  43F9 00003600            320      lea     miss_msg,A1
0000321C  303C 000E                321      move    #14,D0
00003220  4E4F                     322      trap    #15
00003222  4E75                     323      rts
00003224                           324  
00003224                           325  *-------------------------------------------------------
00003224                           326  *--------------------------Loop-------------------------
00003224                           327  *-------------------------------------------------------
00003224                           328  loop:
00003224  163C 0005                329      move.b  #5, D3 loop counter D3=5
00003228                           330  next:
00003228  43F9 00003606            331      lea     loop_msg,A1
0000322E  103C 000E                332      move.b  #14,D0
00003232  4E4F                     333      trap    #15
00003234  5343                     334      sub     #1,D3   decrement loop counter
00003236  66F0                     335      bne     next    repeat until D0=0
00003238                           336  
00003238                           337  *-------------------------------------------------------
00003238                           338  *------------------Screen Decoration--------------------
00003238                           339  *-------------------------------------------------------
00003238                           340  decorate:
00003238  163C 003C                341      move.b  #60, D3
0000323C  6100 004A                342      bsr     endl
00003240                           343  out:
00003240  43F9 00003606            344      lea     loop_msg,A1
00003246  103C 000E                345      move.b  #14,D0
0000324A  4E4F                     346      trap    #15
0000324C  5343                     347      sub     #1,D3   decrement loop counter
0000324E  66F0                     348      bne     out     repeat until D0=0
00003250  6100 0036                349      bsr     endl
00003254  4E75                     350      rts
00003256                           351      
00003256                           352  clear_screen: 
00003256  103C 000B                353      move.b  #11,D0      clear screen
0000325A  323C FF00                354      move.w  #$ff00,D1
0000325E  4E4F                     355      trap    #15
00003260  4E75                     356      rts
00003262                           357  *-------------------------------------------------------
00003262                           358  *------------------------Replay-------------------------
00003262                           359  *-------------------------------------------------------
00003262                           360  replay:
00003262  6100 0024                361      bsr     endl
00003266  43F9 00003608            362      lea     replay_msg,A1
0000326C  103C 000E                363      move.b  #14,D0
00003270  4E4F                     364      trap    #15
00003272                           365      
00003272  103C 0004                366      move.b  #4,D0
00003276  4E4F                     367      trap    #15
00003278                           368  
00003278  1ABC 0000                369      move.b  #0,(A5)     Reset the game state for restart
0000327C                           370      
0000327C  B27C 0000                371      cmp     #exit,D1
00003280  6700 FD84                372      beq     end         if SR Z register contains 1 beq => Branch Equals
00003284  6100 FE8C                373      bsr     gameloop
00003288                           374  
00003288                           375  endl:
00003288  48E7 8040                376      movem.l D0/A1,-(A7)
0000328C  303C 000E                377      move    #14,D0
00003290  43F9 0000345C            378      lea     crlf,A1
00003296  4E4F                     379      trap    #15
00003298  4CDF 0201                380      movem.l (A7)+,D0/A1
0000329C  4E75                     381      rts
0000329E                           382      
0000329E                           383  *-------------------------------------------------------
0000329E                           384  *-------------------Setup the world---------------------
0000329E                           385  *-------------------------------------------------------
0000329E                           386  setup_world:
0000329E  11FC 0001 514A           387      move.b  #1,$514A    Setup the starting corridor
000032A4  11FC 0006 513A           388      move.b  #6,$513A    Continue upwards from starting corridor
000032AA  11FC 0004 5139           389      move.b  #4,$5139
000032B0  11FC 0001 5129           390      move.b  #1,$5129
000032B6  11FC 0001 5119           391      move.b  #1,$5119    First shop
000032BC                           392      
000032BC  4E75                     393      rts
000032BE                           394      
000032BE                           395  *-------------------------------------------------------
000032BE                           396  *----------------------Manage Movement------------------
000032BE                           397  *-------------------------------------------------------
000032BE                           398  movement:
000032BE  43F9 00003A46            399      lea     movement_msg,A1
000032C4  103C 000E                400      move.b  #14,D0
000032C8  4E4F                     401      trap    #15
000032CA                           402  
000032CA  1A3C 0004                403      move.b  #4,D5           Move the number 3 to D5 to tell the program how many options there are
000032CE                           404      
000032CE  6100 FD7A                405      bsr     input           branch to the input subroutine
000032D2  4E75                     406      rts
000032D4                           407  
000032D4                           408  *-------------------------------------------------------
000032D4                           409  *-------------------Check Wall Collisions---------------
000032D4                           410  *-------------------------------------------------------
000032D4                           411  wall_collisions:
000032D4                           412      *Check collisions in the movement direction
000032D4  B23C 0001                413      CMP.B   #1,D1       Check the movement direction
000032D8  6700 001C                414      BEQ     move_north  Branch to Display the corridor type
000032DC                           415      
000032DC  B23C 0002                416      CMP.B   #2,D1       Check the movement direction
000032E0  6700 0062                417      BEQ     move_east   Branch to Display the corridor type
000032E4                           418      
000032E4  B23C 0003                419      CMP.B   #3,D1       Check the movement direction
000032E8  6700 00A6                420      BEQ     move_south  Branch to Display the corridor type
000032EC                           421      
000032EC  B23C 0004                422      CMP.B   #4,D1       Check the movement direction
000032F0  6700 00EC                423      BEQ     move_west   Branch to Display the corridor type
000032F4                           424      
000032F4  4E75                     425      rts
000032F6                           426      
000032F6                           427  move_north:
000032F6                           428      *Check if the tile is any of the corridor types with a wall at the top
000032F6  0C16 0002                429      CMP.B   #2,(A6)
000032FA  6700 012E                430      BEQ     movement_blocked
000032FE  0C16 0003                431      CMP.B   #3,(A6)
00003302  6700 0126                432      BEQ     movement_blocked
00003306  0C16 0006                433      CMP.B   #6,(A6)
0000330A  6700 011E                434      BEQ     movement_blocked
0000330E  0C16 0007                435      CMP.B   #7,(A6)
00003312  6700 0116                436      BEQ     movement_blocked
00003316  0C16 000B                437      CMP.B   #11,(A6)
0000331A  6700 010E                438      BEQ     movement_blocked
0000331E  0C16 000C                439      CMP.B   #12,(A6)
00003322  6700 0106                440      BEQ     movement_blocked
00003326  0C16 000D                441      CMP.B   #13,(A6)
0000332A  6700 00FE                442      BEQ     movement_blocked
0000332E                           443      
0000332E  9CFC 0010                444      sub     #16,A6              Move the player north
00003332  43F9 00003A85            445      lea     move_north_msg,A1   Load the message
00003338  103C 000E                446      move.b  #14,D0              Move the trap command to display a message
0000333C  4E4F                     447      trap    #15                 Display the move north message
0000333E                           448      
0000333E  6100 00FC                449      bsr     press_continue          Pause the game until a key is pressed
00003342                           450      
00003342  4E75                     451      rts
00003344                           452  
00003344                           453  move_east:
00003344                           454      *Check if the tile is any of the corridor types with a wall to the right
00003344  0C16 0001                455      CMP.B   #1,(A6)
00003348  6700 00E0                456      BEQ     movement_blocked
0000334C  0C16 0005                457      CMP.B   #5,(A6)
00003350  6700 00D8                458      BEQ     movement_blocked
00003354  0C16 0006                459      CMP.B   #6,(A6)
00003358  6700 00D0                460      BEQ     movement_blocked
0000335C  0C16 000A                461      CMP.B   #10,(A6)
00003360  6700 00C8                462      BEQ     movement_blocked
00003364  0C16 000C                463      CMP.B   #12,(A6)
00003368  6700 00C0                464      BEQ     movement_blocked
0000336C  0C16 000D                465      CMP.B   #13,(A6)
00003370  6700 00B8                466      BEQ     movement_blocked
00003374  0C16 000E                467      CMP.B   #14,(A6)
00003378  6700 00B0                468      BEQ     movement_blocked
0000337C                           469      
0000337C  524E                     470      add     #1,A6               Move the player east
0000337E  43F9 00003A94            471      lea     move_east_msg,A1    Load the message
00003384  103C 000E                472      move.b  #14,D0              Move the trap command to display a message
00003388  4E4F                     473      trap    #15                 Display the move north message
0000338A                           474      
0000338A  6100 00B0                475      bsr     press_continue          Pause the game until a key is pressed
0000338E                           476      
0000338E  4E75                     477      rts
00003390                           478  
00003390                           479  move_south:
00003390                           480      *Check if the tile is any of the corridor types with a wall at the bottom
00003390  0C16 0002                481      CMP.B   #2,(A6)
00003394  6700 0094                482      BEQ     movement_blocked
00003398  0C16 0004                483      CMP.B   #4,(A6)
0000339C  6700 008C                484      BEQ     movement_blocked
000033A0  0C16 0005                485      CMP.B   #5,(A6)
000033A4  6700 0084                486      BEQ     movement_blocked
000033A8  0C16 0009                487      CMP.B   #9,(A6)
000033AC  6700 007C                488      BEQ     movement_blocked
000033B0  0C16 000B                489      CMP.B   #11,(A6)
000033B4  6700 0074                490      BEQ     movement_blocked
000033B8  0C16 000D                491      CMP.B   #13,(A6)
000033BC  6700 006C                492      BEQ     movement_blocked
000033C0  0C16 000E                493      CMP.B   #14,(A6)
000033C4  6700 0064                494      BEQ     movement_blocked
000033C8                           495      
000033C8  DCFC 0010                496      add     #16,A6              Move the player south
000033CC  43F9 00003AA2            497      lea     move_south_msg,A1   Load the message
000033D2  103C 000E                498      move.b  #14,D0              Move the trap command to display a message
000033D6  4E4F                     499      trap    #15                 Display the move north message
000033D8                           500      
000033D8  6100 0062                501      bsr     press_continue          Pause the game until a key is pressed
000033DC                           502      
000033DC  4E75                     503      rts
000033DE                           504  
000033DE                           505  move_west:
000033DE                           506      *Check if the tile is any of the corridor types with a wall to the left
000033DE  0C16 0001                507      CMP.B   #1,(A6)
000033E2  6700 0046                508      BEQ     movement_blocked
000033E6  0C16 0003                509      CMP.B   #3,(A6)
000033EA  6700 003E                510      BEQ     movement_blocked
000033EE  0C16 0004                511      CMP.B   #4,(A6)
000033F2  6700 0036                512      BEQ     movement_blocked
000033F6  0C16 0008                513      CMP.B   #8,(A6)
000033FA  6700 002E                514      BEQ     movement_blocked
000033FE  0C16 000B                515      CMP.B   #11,(A6)
00003402  6700 0026                516      BEQ     movement_blocked
00003406  0C16 000C                517      CMP.B   #12,(A6)
0000340A  6700 001E                518      BEQ     movement_blocked
0000340E  0C16 000E                519      CMP.B   #14,(A6)
00003412  6700 0016                520      BEQ     movement_blocked
00003416                           521      
00003416  534E                     522      sub     #1,A6               Move the player west
00003418  43F9 00003AB1            523      lea     move_west_msg,A1    Load the message
0000341E  103C 000E                524      move.b  #14,D0              Move the trap command to display a message
00003422  4E4F                     525      trap    #15                 Display the move north message
00003424                           526      
00003424  6100 0016                527      bsr     press_continue          Pause the game until a key is pressed
00003428                           528      
00003428  4E75                     529      rts
0000342A                           530  
0000342A                           531  movement_blocked:
0000342A  43F9 00003ABF            532      lea     movement_blocked_msg,A1 Load the message
00003430  103C 000E                533      move.b  #14,D0                  Move the trap command to display a message
00003434  4E4F                     534      trap    #15                     Display the movement blocked message
00003436  6100 0004                535      bsr     press_continue          Pause the game until a key is pressed
0000343A                           536      
0000343A  4E75                     537      rts             Return from the subroutine
0000343C                           538      
0000343C                           539  *-------------------------------------------------------
0000343C                           540  *-------------------Misc Subroutines--------------------
0000343C                           541  *-------------------------------------------------------
0000343C                           542  press_continue:
0000343C  6100 FE4A                543      bsr     endl
00003440                           544      
00003440  320E                     545      move.w  A6,D1
00003442  103C 0003                546      move.b  #3,D0               Move the trap command to take input
00003446  4E4F                     547      trap    #15                 take input to freeze the game
00003448                           548  
00003448  43F9 00003ADA            549      lea     continue_msg,A1     Load message into A1
0000344E  103C 000E                550      move.b  #14,D0              Move the trap command to display a message
00003452  4E4F                     551      trap    #15                 display the "press any ket to continue" text
00003454                           552      
00003454  103C 0004                553      move.b  #4,D0               Move the trap command to take input
00003458  4E4F                     554      trap    #15                 take input to freeze the game
0000345A  4E75                     555      rts
0000345C                           556      
0000345C                           557  *-------------------------------------------------------
0000345C                           558  *-------------------Data Delarations--------------------
0000345C                           559  *-------------------------------------------------------
0000345C                           560  
0000345C= 0D 0A 00                 561  crlf:           dc.b    $0D,$0A,0
0000345F= 2A 2A 2A 2A 2A 2A ...    562  welcome_msg:    dc.b    '************************************************************'
0000349B= 0D 0A                    563                  dc.b    $0D,$0A
0000349D= 41 76 61 6C 6F 6E ...    564                  dc.b    'Avalon: The Legend Lives'
000034B5= 0D 0A                    565                  dc.b    $0D,$0A
000034B7= 2A 2A 2A 2A 2A 2A ...    566                  dc.b    '************************************************************'
000034F3= 0D 0A 00                 567                  dc.b    $0D,$0A,0
000034F6= 46 65 65 64 20 6C ...    568  potion_msg:     dc.b    'Feed load (each horse needs at least 100 units of feed)'
0000352D= 0D 0A                    569                  dc.b    $0D,$0A
0000352F= 45 6E 74 65 72 20 ...    570                  dc.b    'Enter feed load : ',0
00003542= 4E 75 6D 62 65 72 ...    571  potions_msg:    dc.b    'Number of potions : ',0
00003557= 45 61 63 68 20 71 ...    572  weapons_msg:    dc.b    'Each quest need at least 2 Weapons'
00003579= 0D 0A                    573                  dc.b    $0D,$0A
0000357B= 6D 69 6E 69 6D 75 ...    574                  dc.b    'minimum requirement is 2 i.e. Sword x 1 and Speer x 1.'
000035B1= 0D 0A                    575                  dc.b    $0D,$0A
000035B3= 45 6E 74 65 72 20 ...    576                  dc.b    'Enter # of weapons : ',0
000035C9= 41 64 64 20 47 61 ...    577  gameplay_msg:   dc.b    'Add Gameplay !',0
000035D8= 55 70 64 61 74 65 ...    578  update_msg:     dc.b    'Update Gameplay !',0
000035EA= 44 72 61 77 20 53 ...    579  draw_msg:       dc.b    'Draw Screen !',0
000035F8= 53 74 72 69 6B 65 ...    580  hit_msg:        dc.b    'Strike!',0
00003600= 4D 69 73 73 21 00        581  miss_msg:       dc.b    'Miss!',0
00003606= 2E 00                    582  loop_msg:       dc.b    '.',0
00003608= 45 6E 74 65 72 20 ...    583  replay_msg:     dc.b    'Enter 0 to Quit any other number to replay : ',0
00003636= 53 63 6F 72 65 20 ...    584  hud_msg:        dc.b    'Score : ',0
0000363F                           585  
00003640                           586  health:     ds.w    1
00003642                           587  score:      ds.w    1 reserve space for score
00003644                           588  
00003644= 59 6F 75 20 61 77 ...    589  wake_up_msg:    dc.b    'You awake in a room, on a bed of red velvet, with no memory',$0D,$0A
00003681= 6F 66 20 68 6F 77 ...    590                  dc.b    'of how you got here. You climb from the frame and look in a nearby mirror',$0D,$0A,0
000036CD= 31 3E 20 59 6F 75 ...    591  pick_role_msg:  dc.b    '1> You wear armour of polished iron, a sword laying close by. (Knight class)',$0D,$0A,$0D,$0A
0000371D= 32 3E 20 59 6F 75 ...    592                  dc.b    '2> You wear a cloak with mystic symbols sewn into the fabrics, an ancient',$0D,$0A
00003768= 6C 6F 6F 6B 69 6E ...    593                  dc.b    'looking staff lays near. (Mage class)',$0D,$0A,$0D,$0A
00003791= 33 3E 20 59 6F 75 ...    594                  dc.b    '3> You wear tight, well-fitting leather armour with reminents of black dye',$0D,$0A
000037DD= 73 74 61 69 6E 65 ...    595                  dc.b    'stained to the material. Two knives are fastened to your belt. (Rogue class)',$0D,$0A,0
0000382C= 45 6E 74 65 72 20 ...    596  input_nums_msg:  dc.b    'Enter num between 1 and ',0
00003845= 3A 20 00                 597  colon_msg:       dc.b    ': ',0
00003848                           598  
00003848= 49 6E 70 75 74 74 ...    599  input_error_msg: dc.b    'Inputted number is outside of range.',$0D,$0A,0
0000386F= 47 61 6D 65 73 74 ...    600  fake_gamestate_msg: dc.b    'Gamestate doesnt exist',$0D,$0A,0
00003888= 59 6F 75 20 70 69 ...    601  knight_role_msg: dc.b    'You pick up your sword, grab a torch from the wall, and leave the room.',$0D,$0A
000038D1= 2D 20 59 6F 75 20 ...    602                  dc.b    '- You have chosen the KNIGHT class. You specialise in slow, strong attacks.',$0D,$0A,0
0000391F= 59 6F 75 20 70 69 ...    603  mage_role_msg:   dc.b    'You pick up your staff, grab a torch from the wall, and leave the room.',$0D,$0A
00003968= 2D 20 59 6F 75 20 ...    604                  dc.b    '- You have chosen the MAGE class. You specialise in ranged magic attacks.',$0D,$0A,0
000039B4= 59 6F 75 20 66 61 ...    605  rogue_role_msg:  dc.b    'You fasten your belt, grab a torch from the wall, and leave the room.',$0D,$0A
000039FB= 2D 20 59 6F 75 20 ...    606                  dc.b    '- You have chosen the ROGUE class. You specialise in fast, weak attacks.',$0D,$0A,0
00003A46= 31 3E 20 4D 6F 76 ...    607  movement_msg:    dc.b    '1> Move north.',$0D,$0A
00003A56= 32 3E 20 4D 6F 76 ...    608                  dc.b    '2> Move east.',$0D,$0A
00003A65= 33 3E 20 4D 6F 76 ...    609                  dc.b    '3> Move south.',$0D,$0A
00003A75= 34 3E 20 4D 6F 76 ...    610                  dc.b    '4> Move west.',$0D,$0A,0
00003A85= 4D 6F 76 65 64 20 ...    611  move_north_msg:  dc.b    'Moved north.',$0D,$0A,0
00003A94= 4D 6F 76 65 64 20 ...    612  move_east_msg:   dc.b    'Moved east.',$0D,$0A,0
00003AA2= 4D 6F 76 65 64 20 ...    613  move_south_msg:  dc.b    'Moved south.',$0D,$0A,0
00003AB1= 4D 6F 76 65 64 20 ...    614  move_west_msg:   dc.b    'Moved west.',$0D,$0A,0
00003ABF= 41 20 77 61 6C 6C ...    615  movement_blocked_msg:  dc.b    'A wall blocks your path.',$0D,$0A,0
00003ADA= 45 6E 74 65 72 20 ...    616  continue_msg:    dc.b    'Enter any key to continue... ',0
00003AF8                           617  
00003AF8                           618      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLEAR_SCREEN        3256
COLLISION           31FC
COLLISION_HIT       3208
COLLISION_MISS      3216
COLON_MSG           3845
CONTINUE_MSG        3ADA
CRLF                345C
DECORATE            3238
DRAW                3158
DRAW_MSG            35EA
END                 3006
ENDL                3288
EXIT                0
FAKE_GAMESTATE      3104
FAKE_GAMESTATE_MSG  386F
FEED                3172
GAME                3000
GAMELOOP            3112
GAMEPLAY            31C0
GAMEPLAY_MSG        35C9
HEALTH              3640
HIT_MSG             35F8
HUD                 31DA
HUD_MSG             3636
INPUT               304A
INPUT_ERROR_MSG     3848
INPUT_NUMS_MSG      382C
INVALID_INPUT       3098
KNIGHT_ROLE_MSG     3888
KNIGHT_SELECT       30C2
LOOP                3224
LOOP_MSG            3606
LOSE_POINT          8
MAGE_ROLE_MSG       391F
MAGE_SELECT         30D8
MANAGE_INPUT        3074
MAX_POTIONS         9
MINE_LOC            64
MIN_FEED            64
MIN_POTIONS         1
MIN_WEAPONS         6
MISS_MSG            3600
MOVEMENT            32BE
MOVEMENT_BLOCKED    342A
MOVEMENT_BLOCKED_MSG  3ABF
MOVEMENT_MSG        3A46
MOVE_EAST           3344
MOVE_EAST_MSG       3A94
MOVE_NORTH          32F6
MOVE_NORTH_MSG      3A85
MOVE_SOUTH          3390
MOVE_SOUTH_MSG      3AA2
MOVE_WEST           33DE
MOVE_WEST_MSG       3AB1
NEXT                3228
OUT                 3240
PICK_ROLE           3020
PICK_ROLE_MSG       36CD
POTIONS             318C
POTIONS_MSG         3542
POTION_MSG          34F6
PRESS_CONTINUE      343C
REPLAY              3262
REPLAY_MSG          3608
ROGUE_ROLE_MSG      39B4
ROGUE_SELECT        30EE
ROLE_INPUT          30A6
SCORE               3642
SETUP_WORLD         329E
START               1000
UPDATE              313E
UPDATE_MSG          35D8
WAKE_UP_MSG         3644
WALL_COLLISIONS     32D4
WEAPONS             31A6
WEAPONS_MSG         3557
WELCOME             300A
WELCOME_MSG         345F
WIN_POINT           5

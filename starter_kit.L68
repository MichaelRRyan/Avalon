00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 25/02/2019 10:45:44

00000000                             1  *-------------------------------------------------------
00000000                             2  * Author         : Michael Rainsford Ryan
00000000                             3  * Student Number : C00239510
00000000                             4  * Date Created   : 21/01/2019
00000000                             5  * Description    : A simplified, offline clone of the
00000000                             6  *                : online game "Avalon".
00000000                             7  * Issues/Bugs    : None currenty.
00000000                             8  *-------------------------------------------------------
00000000                             9  
00001000                            10      org $1000
00001000                            11  
00001000                            12  *-------------------------------------------------------
00001000                            13  *Choose to be a Worker or a God 
00001000                            14  *https://www.avalon-rpg.com/
00001000                            15  *-------------------------------------------------------
00001000                            16  
00001000                            17  *-------------------------------------------------------
00001000                            18  *Validation values to be used, modify as needed
00001000                            19  *Add additional validation values as required
00001000                            20  *-------------------------------------------------------
00001000  =00000000                 21  exit        EQU 0      used to exit assembly program
00001000  =00000064                 22  min_feed    EQU 100    min feed requirement
00001000  =00000001                 23  min_potions EQU 1      min number of potions
00001000  =00000009                 24  max_potions EQU 9      max number of potions
00001000  =00000006                 25  min_weapons EQU 6      min weapons
00001000  =00000005                 26  win_point   EQU 5      points accumilated on win
00001000  =00000008                 27  lose_point  EQU 8      points deducted on a loss
00001000                            28  
00001000  =00000064                 29  mine_loc    EQU 100    example for a hit
00001000                            30  
00001000                            31  
00001000                            32  *Start of Game
00001000                            33  start:
00001000  11FC 0064 4000            34      move.b  #100,$4000 put score/health in memory location $4000
00001006  47F8 4000                 35      lea     $4000,A3   assign address A3 to that memory location
0000100A                            36      
0000100A  11FC 0000 4010            37      move.b  #0,$4010   put stage number in memory location $4010
00001010  49F8 4010                 38      lea     $4010,A4   assign address A4 to that memory location
00001014                            39  
00001014  11FC 0000 4020            40      move.b  #0,$4020   put class number in memory location $4010
0000101A  4BF8 4020                 41      lea     $4020,A5   assign address A4 to that memory location
0000101E                            42      * 1 corresponds to knight - 2 corresponds to mage - 3 corresponds to rogue
0000101E                            43      
0000101E  11FC 0000 4030            44      move.b  #0,$4030   put torches number in memory location $4010
00001024  4DF8 4030                 45      lea     $4030,A6   assign address A4 to that memory location
00001028                            46  
00001028  6100 1FE0                 47      bsr     welcome    branch to the welcome subroutine
0000102C  6100 1FD2                 48      bsr     game       branch to the game subroutine
00001030                            49  *Game loop
00003000                            50      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            51  
00003000                            52  *-------------------------------------------------------
00003000                            53  *-------------------Game Subroutine---------------------
00003000                            54  *-------------------------------------------------------
00003000                            55  game:
00003000  6100 0102                 56      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      57      rts                return from game: subroutine
00003006                            58            
00003006                            59  end:
00003006  FFFF FFFF                 60      simhalt
0000300A                            61  
0000300A                            62  *-------------------------------------------------------
0000300A                            63  *-------------------Welcome Subroutine------------------
0000300A                            64  *-------------------------------------------------------
0000300A                            65  welcome:
0000300A  6100 0264                 66      bsr     endl            branch to endl subroutine
0000300E  43F9 00003289             67      lea     welcome_msg,A1  assign message to address register A1
00003014  103C 000E                 68      move.b  #14,D0          move literal 14 to DO
00003018  4E4F                      69      trap    #15             trap and interpret value in D0
0000301A  6100 0254                 70      bsr     endl            branch to endl subroutine
0000301E  4E75                      71      rts                     return from welcome: subroutine
00003020                            72  
00003020                            73  *-------------------------------------------------------
00003020                            74  *-------------------Role Picking Subroutine------------------
00003020                            75  *-------------------------------------------------------
00003020                            76  pick_role:
00003020                            77  
00003020  43F9 0000346E             78      lea     wake_up_msg,A1  assign message to address register A1
00003026  103C 000E                 79      move.b  #14,D0          move literal 14 to DO
0000302A  4E4F                      80      trap    #15             trap and interpret value in D0
0000302C  6100 0242                 81      bsr     endl            branch to endl subroutine
00003030                            82      
00003030  43F9 000034F7             83      lea     pick_role_msg,A1 assign message to address register A1
00003036  103C 000E                 84      move.b  #14,D0           move literal 14 to DO
0000303A  4E4F                      85      trap    #15              trap and interpret value in D0
0000303C                            86      
0000303C  1A3C 0003                 87      move.b  #3,D5           Move the number 3 to D5 to tell the program how many options there are
00003040                            88      
00003040  6100 000A                 89      bsr     input           branch to the input subroutine
00003044                            90      
00003044  103C 0004                 91      move.b  #4,D0           Move the number 4 to D0
00003048  4E4F                      92      trap    #15             Take input
0000304A                            93      
0000304A  4E75                      94      rts                     return from pick_role: subroutine
0000304C                            95      
0000304C                            96  *-------------------------------------------------------
0000304C                            97  *---------Gameplay Input Values Subroutine--------------
0000304C                            98  *-------------------------------------------------------    
0000304C                            99  input:
0000304C  6100 0222                100      bsr     endl            Branch to end line subroutine
00003050                           101      
00003050  43F9 00003656            102      lea     input_nums_msg,A1 assign message to address register A1
00003056  103C 000E                103      move.b  #14,D0          move literal 14 to DO
0000305A  4E4F                     104      trap    #15             Display the "enter number" message
0000305C                           105      
0000305C  2205                     106      move.l  D5,D1           Move the number of options to D1 to display it
0000305E  103C 0003                107      move.b  #3,D0           move literal 3 to DO
00003062  4E4F                     108      trap    #15             Display the number in D1 to show the input range
00003064                           109      
00003064  43F9 0000366F            110      lea     colon_msg,A1    assign message to address register A1
0000306A  103C 000E                111      move.b  #14,D0          move literal 14 to DO
0000306E  4E4F                     112      trap    #15             Display a colon after the number range
00003070                           113      
00003070  103C 0004                114      move.b  #4,D0           Move the number 4 to D0
00003074  4E4F                     115      trap    #15             Take input
00003076                           116      
00003076                           117  manage_input:
00003076  B27C 0001                118      CMP     #1,D1           Check input against minimum value
0000307A  6D00 0016                119      BLT     invalid_input   Error if less than 1
0000307E                           120      
0000307E  B245                     121      CMP     D5,D1           Compare input against max value
00003080  6E00 0010                122      BGT     invalid_input   Error if less than max value
00003084                           123      
00003084  0C14 0000                124      CMP.B   #0,(A4)          Check which state the game is in
00003088  6700 0016                125      BEQ     role_input      Branch to the manage input for the role picking
0000308C  6600 0068                126      BNE     fake_gamestate  branch to display a message if the gamestate is undifined
00003090                           127      
00003090  4E75                     128      rts                     Return out of subroutine
00003092                           129  
00003092                           130  invalid_input:
00003092  43F9 00003672            131      lea     input_error_msg,A1 assign message to address register A1
00003098  103C 000E                132      move.b  #14,D0          move literal 14 to DO
0000309C  4E4F                     133      trap    #15             Display the error message
0000309E                           134      
0000309E  60AC                     135      bra     input           Go back to taking input
000030A0                           136      
000030A0                           137  role_input:
000030A0  43F9 00003699            138      lea     congrats,A1     assign message to address register A1
000030A6  103C 000E                139      move.b  #14,D0          move literal 14 to DO
000030AA  4E4F                     140      trap    #15             Display the congrats message
000030AC                           141      
000030AC  1A81                     142      move.b  D1,(A5)         Move the role number to A5 to hold the class number
000030AE                           143      
000030AE                           144  *Give the player a message depending on the role chosen
000030AE  B23C 0001                145      CMP.B   #1,D1
000030B2  6700 0018                146      BEQ     knight_select   Branch to knight message if role selected
000030B6                           147      
000030B6  B23C 0002                148      CMP.B   #2,D1
000030BA  6700 001E                149      BEQ     mage_select     Branch to mage message if role selected
000030BE                           150      
000030BE  B23C 0003                151      CMP.B   #3,D1
000030C2  6700 0024                152      BEQ     rogue_select    Branch to rogue message if role selected
000030C6                           153      
000030C6  18BC 0001                154      move.b  #1,(A4)         Change the game state
000030CA                           155      
000030CA  4E75                     156      rts
000030CC                           157      
000030CC                           158  knight_select:
000030CC  43F9 000036C7            159      lea     knight_role_msg,A1 assign message to address register A1
000030D2  103C 000E                160      move.b  #14,D0          move literal 14 to DO
000030D6  4E4F                     161      trap    #15             Display the knight message
000030D8  4E75                     162      rts                     Return from the sub routine
000030DA                           163  
000030DA                           164  mage_select:
000030DA  43F9 0000375E            165      lea     mage_role_msg,A1 assign message to address register A1
000030E0  103C 000E                166      move.b  #14,D0          move literal 14 to DO
000030E4  4E4F                     167      trap    #15             Display the mage message
000030E6  4E75                     168      rts                     Return from the sub routine
000030E8                           169  
000030E8                           170  rogue_select:
000030E8  43F9 000037F3            171      lea     rogue_role_msg,A1 assign message to address register A1
000030EE  103C 000E                172      move.b  #14,D0          move literal 14 to DO
000030F2  4E4F                     173      trap    #15             Display the rogue message
000030F4  4E75                     174      rts                     Return from the sub routine
000030F6                           175  
000030F6                           176  fake_gamestate:
000030F6  43F9 000036AE            177      lea     fake_gamestate_msg,A1     assign message to address register A1
000030FC  103C 000E                178      move.b  #14,D0          move literal 14 to DO
00003100  4E4F                     179      trap    #15             Display the error message
00003102  4E75                     180      rts
00003104                           181  
00003104                           182  *-------------------------------------------------------
00003104                           183  *----------------Gameloop (main loop)-------------------
00003104                           184  *------------------------------------------------------- 
00003104                           185  gameloop:
00003104  6100 0028                186      bsr     update          branch to update game subroutine 
00003108  6100 0134                187      bsr     clear_screen    clears the screen         
0000310C  6100 003A                188      bsr     draw            branch to draw screen subroutine
00003110  6100 012C                189      bsr     clear_screen    clears the screen
00003114  6100 009A                190      bsr     gameplay        branch to gameplay subroutine
00003118  6100 0124                191      bsr     clear_screen    clears the screen
0000311C  6100 00A4                192      bsr     hud             branch to display HUD subroutine
00003120  6100 011C                193      bsr     clear_screen    clears the screen
00003124  6100 0124                194      bsr     replay          branch to replay game subroutine
00003128  6100 0114                195      bsr     clear_screen    clears the screen
0000312C  4E75                     196      rts                     return from gameloop: subroutine
0000312E                           197  
0000312E                           198  *-------------------------------------------------------
0000312E                           199  *----------------Update Quest Progress------------------
0000312E                           200  *  Complete Quest
0000312E                           201  *------------------------------------------------------- 
0000312E                           202  update:
0000312E  6100 0140                203      bsr     endl            print a CR and LF
00003132  6100 00EC                204      bsr     decorate        decorate with dots using a loop
00003136  43F9 00003402            205      lea     update_msg,A1   
0000313C  103C 000E                206      move.b  #14,D0
00003140  4E4F                     207      trap    #15
00003142  6100 00DC                208      bsr     decorate
00003146  4E75                     209      rts
00003148                           210  *-------------------------------------------------------
00003148                           211  *-----------------Draw Quest Updates--------------------
00003148                           212  * Draw the game progress information, status regarding
00003148                           213  * quest
00003148                           214  *------------------------------------------------------- 
00003148                           215  draw:
00003148  6100 0126                216      bsr     endl
0000314C  6100 00D2                217      bsr     decorate
00003150  43F9 00003414            218      lea     draw_msg,A1
00003156  103C 000E                219      move.b  #14,D0
0000315A  4E4F                     220      trap    #15
0000315C  6100 00C2                221      bsr     decorate
00003160  4E75                     222      rts
00003162                           223  *-------------------------------------------------------
00003162                           224  *------------------------Potions------------------------
00003162                           225  * Input the ingredients for each potion. Ingredients costs 
00003162                           226  * money. For an advanced mark you need to manage this 
00003162                           227  * resource
00003162                           228  *------------------------------------------------------- 
00003162                           229  feed:
00003162  6100 010C                230      bsr     endl
00003166  6100 00B8                231      bsr     decorate
0000316A  43F9 00003320            232      lea     potion_msg,A1
00003170  103C 000E                233      move.b  #14,D0
00003174  4E4F                     234      trap    #15
00003176  6100 00A8                235      bsr     decorate
0000317A  4E75                     236      rts
0000317C                           237  
0000317C                           238  *-------------------------------------------------------
0000317C                           239  *--------------------Potions Inventory---------------------
0000317C                           240  * Number of potions to be used in a Quest 
0000317C                           241  *------------------------------------------------------- 
0000317C                           242  potions:
0000317C  6100 00F2                243      bsr     endl
00003180  6100 009E                244      bsr     decorate
00003184  43F9 0000336C            245      lea     potions_msg,A1
0000318A  103C 000E                246      move.b  #14,D0
0000318E  4E4F                     247      trap    #15
00003190  6100 008E                248      bsr     decorate
00003194  4E75                     249      rts
00003196                           250  
00003196                           251  *-------------------------------------------------------
00003196                           252  *-------------------------Weapons-----------------------
00003196                           253  * Number of weapons
00003196                           254  *-------------------------------------------------------   
00003196                           255  weapons:
00003196  6100 00D8                256      bsr     endl
0000319A  6100 0084                257      bsr     decorate
0000319E  43F9 00003381            258      lea     weapons_msg,A1
000031A4  103C 000E                259      move.b  #14,D0
000031A8  4E4F                     260      trap    #15
000031AA  6100 0074                261      bsr     decorate
000031AE  4E75                     262      rts
000031B0                           263  
000031B0                           264  *-------------------------------------------------------
000031B0                           265  *---Game Play (Quest Progress)--------------------------
000031B0                           266  *------------------------------------------------------- 
000031B0                           267  gameplay:
000031B0  6100 00BE                268      bsr     endl
000031B4  0C14 0000                269      CMP.B   #0,(A4)     Check which stage the game is in
000031B8  6700 FE66                270      BEQ     pick_role  branch to the pick role subroutine
000031BC  6100 0026                271      bsr     collision
000031C0  4E75                     272      rts
000031C2                           273  
000031C2                           274  *-------------------------------------------------------
000031C2                           275  *-----------------Heads Up Display (Score)--------------
000031C2                           276  * Retrieves the score from memory location
000031C2                           277  *-------------------------------------------------------   
000031C2                           278  hud:
000031C2                           279  
000031C2  6100 00AC                280      bsr     endl
000031C6  6100 0058                281      bsr     decorate
000031CA  43F9 00003460            282      lea     hud_msg,A1
000031D0  103C 000E                283      move.b  #14,D0
000031D4  4E4F                     284      trap    #15
000031D6  1213                     285      move.b  (A3),D1     retrieve the value A3 point to and move to D1
000031D8  103C 0003                286      move.b  #3,D0       move literal 3 to D0
000031DC  4E4F                     287      trap    #15         intrepret value in D0, which 3 which displays D1
000031DE  6100 0040                288      bsr     decorate
000031E2  4E75                     289      rts
000031E4                           290  
000031E4                           291  *-------------------------------------------------------
000031E4                           292  *-----------------------Being Attacked------------------
000031E4                           293  * This could be used for collision detection
000031E4                           294  *-------------------------------------------------------
000031E4                           295  collision:
000031E4  123C 0064                296      move.b  #mine_loc,D1
000031E8  B27C 0064                297      cmp     #100,D1 is( x == 100)?
000031EC  6600 0010                298      bne     collision_miss if x is equal to 100, then hit
000031F0                           299  collision_hit:
000031F0                           300      *hit
000031F0  43F9 00003422            301      lea     hit_msg,A1
000031F6  303C 000E                302      move    #14,D0
000031FA  4E4F                     303      trap    #15
000031FC  4E75                     304      rts
000031FE                           305      
000031FE                           306  collision_miss:
000031FE                           307      *miss
000031FE  43F9 0000342A            308      lea     miss_msg,A1
00003204  303C 000E                309      move    #14,D0
00003208  4E4F                     310      trap    #15
0000320A  4E75                     311      rts
0000320C                           312  
0000320C                           313  *-------------------------------------------------------
0000320C                           314  *--------------------------Loop-------------------------
0000320C                           315  *-------------------------------------------------------
0000320C                           316  loop:
0000320C  163C 0005                317      move.b  #5, D3 loop counter D3=5
00003210                           318  next:
00003210  43F9 00003430            319      lea     loop_msg,A1
00003216  103C 000E                320      move.b  #14,D0
0000321A  4E4F                     321      trap    #15
0000321C  5343                     322      sub     #1,D3   decrement loop counter
0000321E  66F0                     323      bne     next    repeat until D0=0
00003220                           324  
00003220                           325  *-------------------------------------------------------
00003220                           326  *------------------Screen Decoration--------------------
00003220                           327  *-------------------------------------------------------
00003220                           328  decorate:
00003220  163C 003C                329      move.b  #60, D3
00003224  6100 004A                330      bsr     endl
00003228                           331  out:
00003228  43F9 00003430            332      lea     loop_msg,A1
0000322E  103C 000E                333      move.b  #14,D0
00003232  4E4F                     334      trap    #15
00003234  5343                     335      sub     #1,D3   decrement loop counter
00003236  66F0                     336      bne     out     repeat until D0=0
00003238  6100 0036                337      bsr     endl
0000323C  4E75                     338      rts
0000323E                           339      
0000323E                           340  clear_screen: 
0000323E  103C 000B                341      move.b  #11,D0      clear screen
00003242  323C FF00                342      move.w  #$ff00,D1
00003246  4E4F                     343      trap    #15
00003248  4E75                     344      rts
0000324A                           345  *-------------------------------------------------------
0000324A                           346  *------------------------Replay-------------------------
0000324A                           347  *-------------------------------------------------------
0000324A                           348  replay:
0000324A  6100 0024                349      bsr     endl
0000324E  43F9 00003432            350      lea     replay_msg,A1
00003254  103C 000E                351      move.b  #14,D0
00003258  4E4F                     352      trap    #15
0000325A                           353      
0000325A  103C 0004                354      move.b  #4,D0
0000325E  4E4F                     355      trap    #15
00003260                           356  
00003260  1ABC 0000                357      move.b  #0,(A5)     Reset the game state for restart
00003264                           358      
00003264  B27C 0000                359      cmp     #exit,D1
00003268  6700 FD9C                360      beq     end         if SR Z register contains 1 beq => Branch Equals
0000326C  6100 FE96                361      bsr     gameloop
00003270                           362  
00003270                           363  endl:
00003270  48E7 8040                364      movem.l D0/A1,-(A7)
00003274  303C 000E                365      move    #14,D0
00003278  43F9 00003286            366      lea     crlf,A1
0000327E  4E4F                     367      trap    #15
00003280  4CDF 0201                368      movem.l (A7)+,D0/A1
00003284  4E75                     369      rts
00003286                           370      
00003286                           371  *-------------------------------------------------------
00003286                           372  *-------------------Data Delarations--------------------
00003286                           373  *-------------------------------------------------------
00003286                           374  
00003286= 0D 0A 00                 375  crlf:           dc.b    $0D,$0A,0
00003289= 2A 2A 2A 2A 2A 2A ...    376  welcome_msg:    dc.b    '************************************************************'
000032C5= 0D 0A                    377                  dc.b    $0D,$0A
000032C7= 41 76 61 6C 6F 6E ...    378                  dc.b    'Avalon: The Legend Lives'
000032DF= 0D 0A                    379                  dc.b    $0D,$0A
000032E1= 2A 2A 2A 2A 2A 2A ...    380                  dc.b    '************************************************************'
0000331D= 0D 0A 00                 381                  dc.b    $0D,$0A,0
00003320= 46 65 65 64 20 6C ...    382  potion_msg:     dc.b    'Feed load (each horse needs at least 100 units of feed)'
00003357= 0D 0A                    383                  dc.b    $0D,$0A
00003359= 45 6E 74 65 72 20 ...    384                  dc.b    'Enter feed load : ',0
0000336C= 4E 75 6D 62 65 72 ...    385  potions_msg:    dc.b    'Number of potions : ',0
00003381= 45 61 63 68 20 71 ...    386  weapons_msg:    dc.b    'Each quest need at least 2 Weapons'
000033A3= 0D 0A                    387                  dc.b    $0D,$0A
000033A5= 6D 69 6E 69 6D 75 ...    388                  dc.b    'minimum requirement is 2 i.e. Sword x 1 and Speer x 1.'
000033DB= 0D 0A                    389                  dc.b    $0D,$0A
000033DD= 45 6E 74 65 72 20 ...    390                  dc.b    'Enter # of weapons : ',0
000033F3= 41 64 64 20 47 61 ...    391  gameplay_msg:   dc.b    'Add Gameplay !',0
00003402= 55 70 64 61 74 65 ...    392  update_msg:     dc.b    'Update Gameplay !',0
00003414= 44 72 61 77 20 53 ...    393  draw_msg:       dc.b    'Draw Screen !',0
00003422= 53 74 72 69 6B 65 ...    394  hit_msg:        dc.b    'Strike!',0
0000342A= 4D 69 73 73 21 00        395  miss_msg:       dc.b    'Miss!',0
00003430= 2E 00                    396  loop_msg:       dc.b    '.',0
00003432= 45 6E 74 65 72 20 ...    397  replay_msg:     dc.b    'Enter 0 to Quit any other number to replay : ',0
00003460= 53 63 6F 72 65 20 ...    398  hud_msg:        dc.b    'Score : ',0
00003469                           399  
0000346A                           400  health:     ds.w    1
0000346C                           401  score:      ds.w    1 reserve space for score
0000346E                           402  
0000346E= 59 6F 75 20 61 77 ...    403  wake_up_msg:    dc.b    'You awake in a room, on a bed of red velvet, with no memory',$0D,$0A
000034AB= 6F 66 20 68 6F 77 ...    404                  dc.b    'of how you got here. You climb from the frame and look in a nearby mirror',$0D,$0A,0
000034F7= 31 3E 20 59 6F 75 ...    405  pick_role_msg:  dc.b    '1> You wear armour of polished iron, a sword laying close by. (Knight class)',$0D,$0A,$0D,$0A
00003547= 32 3E 20 59 6F 75 ...    406                  dc.b    '2> You wear a cloak with mystic symbols sewn into the fabrics, an ancient',$0D,$0A
00003592= 6C 6F 6F 6B 69 6E ...    407                  dc.b    'looking staff lays near. (Mage class)',$0D,$0A,$0D,$0A
000035BB= 33 3E 20 59 6F 75 ...    408                  dc.b    '3> You wear tight, well-fitting leather armour with reminents of black dye',$0D,$0A
00003607= 73 74 61 69 6E 65 ...    409                  dc.b    'stained to the material. Two knives are fastened to your belt. (Rogue class)',$0D,$0A,0
00003656= 45 6E 74 65 72 20 ...    410  input_nums_msg  dc.b    'Enter num between 1 and ',0
0000366F= 3A 20 00                 411  colon_msg       dc.b    ': ',0
00003672                           412  
00003672= 49 6E 70 75 74 74 ...    413  input_error_msg dc.b    'Inputted number is outside of range.',$0D,$0A,0
00003699= 59 6F 75 20 70 69 ...    414  congrats        dc.b    'You picked a role!',$0D,$0A,0
000036AE= 47 61 6D 65 73 74 ...    415  fake_gamestate_msg dc.b    'Gamestate doesnt exist',$0D,$0A,0
000036C7= 59 6F 75 20 70 69 ...    416  knight_role_msg dc.b    'You pick up your sword, grab a torch from the wall, and leave the room.',$0D,$0A
00003710= 2D 20 59 6F 75 20 ...    417                  dc.b    '- You have chosen the KNIGHT class. You specialise in slow, strong attacks.',$0D,$0A,0
0000375E= 59 6F 75 20 70 69 ...    418  mage_role_msg   dc.b    'You pick up your staff, grab a torch from the wall, and leave the room.',$0D,$0A
000037A7= 2D 20 59 6F 75 20 ...    419                  dc.b    '- You have chosen the MAGE class. You specialise in ranged magic attacks.',$0D,$0A,0
000037F3= 59 6F 75 20 66 61 ...    420  rogue_role_msg  dc.b    'You fasten your belt, grab a torch from the wall, and leave the room.',$0D,$0A
0000383A= 2D 20 59 6F 75 20 ...    421                  dc.b    '- You have chosen the ROGUE class. You specialise in fast, weak attacks.',$0D,$0A,0
00003885                           422  
00003885                           423      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLEAR_SCREEN        323E
COLLISION           31E4
COLLISION_HIT       31F0
COLLISION_MISS      31FE
COLON_MSG           366F
CONGRATS            3699
CRLF                3286
DECORATE            3220
DRAW                3148
DRAW_MSG            3414
END                 3006
ENDL                3270
EXIT                0
FAKE_GAMESTATE      30F6
FAKE_GAMESTATE_MSG  36AE
FEED                3162
GAME                3000
GAMELOOP            3104
GAMEPLAY            31B0
GAMEPLAY_MSG        33F3
HEALTH              346A
HIT_MSG             3422
HUD                 31C2
HUD_MSG             3460
INPUT               304C
INPUT_ERROR_MSG     3672
INPUT_NUMS_MSG      3656
INVALID_INPUT       3092
KNIGHT_ROLE_MSG     36C7
KNIGHT_SELECT       30CC
LOOP                320C
LOOP_MSG            3430
LOSE_POINT          8
MAGE_ROLE_MSG       375E
MAGE_SELECT         30DA
MANAGE_INPUT        3076
MAX_POTIONS         9
MINE_LOC            64
MIN_FEED            64
MIN_POTIONS         1
MIN_WEAPONS         6
MISS_MSG            342A
NEXT                3210
OUT                 3228
PICK_ROLE           3020
PICK_ROLE_MSG       34F7
POTIONS             317C
POTIONS_MSG         336C
POTION_MSG          3320
REPLAY              324A
REPLAY_MSG          3432
ROGUE_ROLE_MSG      37F3
ROGUE_SELECT        30E8
ROLE_INPUT          30A0
SCORE               346C
START               1000
UPDATE              312E
UPDATE_MSG          3402
WAKE_UP_MSG         346E
WEAPONS             3196
WEAPONS_MSG         3381
WELCOME             300A
WELCOME_MSG         3289
WIN_POINT           5
